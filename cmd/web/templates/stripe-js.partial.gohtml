{{ define "stripe-js"}}
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        let card;
        let stripe;
        const cardMessages = document.getElementById("card-messages");
        const payButton = document.getElementById("pay-button");
        const processing = document.getElementById("processing-payment");


        stripe = Stripe({{.StripePublishableKey }});

        function hidePayButton() {
            payButton.classList.add("d-none");
            processing.classList.remove("d-none");
        }

        function showPayButtons() {
            payButton.classList.remove("d-none");
            processing.classList.add("d-none");
        }

        function showCardError(message) {
            cardMessages.classList.remove("d-none");
            cardMessages.classList.remove("alert-success");
            cardMessages.classList.add("alert-danger");
            cardMessages.innerText = message;
        }

        function showCardSuccess(message) {
            cardMessages.classList.remove("d-none");
            cardMessages.classList.add("alert-success");
            cardMessages.classList.remove("alert-danger");
            cardMessages.innerText = "Transaction successful";
        }


        async function val() {
            let form = document.getElementById("charge_form");
            if (form.checkValidity() === false) {
                this.event.preventDefault();
                this.event.stopPropagation();
                form.classList.add('was-validated');
                return
            }

            form.classList.add('was-validated');
            hidePayButton();

            let amountToCharge = document.getElementById("amount").value; // need a whole number

            let payload = {
                amount: amountToCharge,
                currency: 'usd',
            }

            const requestOptions = {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(payload),
            }

            const response = await fetch("{{.API}}/api/payment-intent", requestOptions);
            const data = await response.text();
            try {
                const paymentIntent = JSON.parse(data);
                console.log(paymentIntent);

                const result = await stripe.confirmCardPayment(paymentIntent.client_secret, {
                    payment_method: {
                        card: card,
                        billing_details: {
                            name: document.getElementById("cardholder-name").value,
                        }
                    }
                })

                if (result.error) {
// Something went wrong here, or card got declined.
                    showCardError(result.error.message);
                    showPayButtons();
                    return
                }

                if (result.paymentIntent) {
                    if (result.paymentIntent.status === 'succeeded') {
// we charged the card.
                        document.getElementById("payment_method").value = result.paymentIntent.payment_method;
                        document.getElementById("payment_intent").value = result.paymentIntent.id;
                        document.getElementById("payment_amount").value = result.paymentIntent.amount;
                        document.getElementById("payment_currency").value = result.paymentIntent.currency;
                        processing.classList.add("d-none");

                        showCardSuccess();
// Would submit the form here.
                        document.getElementById("charge_form").submit();
                    }
                }


            } catch (e) {
                console.log(e);

                showCardError("Invalid response from payment gateway");
                showPayButtons();
            }
        }

        (function () {
// create stripe and elements
            const elements = stripe.elements();

            const style = {
                base: {
                    fontSize: '16px',
                    lineHeight: '24px',
                }
            }

// card entry
            card = elements.create('card', {
                style,
                hidePostalCode: true,
            })
            card.mount("#card-element");

// check for input errors
            card.addEventListener('change', (event) => {
                const errrorDiv = document.getElementById('card-errors');
                if (event.error) {
                    errrorDiv.classList.remove('d-none');
                    errrorDiv.textContent = event.error.message;
                } else {
                    errrorDiv.classList.add('d-none');
                    errrorDiv.textContent = '';
                }
            })
        })();
    </script>
{{end}}