{{ template "base" .}}

{{ define "title" }}
Login
{{ end }}

{{ define "content" }}
    <form action="" method="post" name="login_form" id="login_form" class="d-block needs-validation charge-form" autocomplete="off" novalidate="">
        <h3 class="mt-2 text-center mb-3">Login</h3>


        <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <input type="email" class="form-control" id="email" name="email" placeholder="Email" required="" autocomplete="email-new">
        </div>
        <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <input type="password" class="form-control" id="password" name="password" placeholder="Password" required="" autocomplete="password-new"/>
        </div>
        <hr/>
        <a  class="btn btn-primary btn-lg btn-block" href="javascript:void(0)" onClick="val()">Login</a>
    </form>
{{end }}


{{ define "js"}}
   <script>
        async function val() {
            let form = document.getElementById("login_form");
            if (form.checkValidity() === false) {
                this.event.preventDefault();
                this.event.stopPropagation();
                form.classList.add('was-validated');
                return
            }

            form.classList.add('was-validated');
            


            let payload = {
                email: document.getElementById("email").value,
                password: document.getElementById("password").value,
            }

            const requestOptions = {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(payload),
            }

          try {
            const response = await fetch("{{.API}}/api/authenticate", requestOptions);
            const data = await response.json();
            console.log(data);
          } catch (error) {
            console.log(error);
          }
              
        }
  </script>
{{ end }}